# Generated by Django 3.0 on 2020-07-02 12:01

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields
import users.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('locations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('push_token', models.CharField(blank=True, max_length=200, null=True)),
                ('bio', models.TextField(blank=True, default='', null=True)),
                ('distance', models.IntegerField(blank=True, default=0, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('OTHER', 'Other')], max_length=15, null=True)),
                ('avatar_url', models.CharField(blank=True, max_length=300, null=True)),
                ('app_avatar_url', models.CharField(blank=True, max_length=300, null=True)),
                ('country_phone_code', models.CharField(blank=True, max_length=20, null=True)),
                ('country_phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('is_verified_phone_number', models.BooleanField(default=False)),
                ('is_verified_email_address', models.BooleanField(default=False)),
                ('email_address', models.EmailField(blank=True, max_length=50, null=True)),
                ('fbId', models.CharField(blank=True, max_length=60, null=True)),
                ('appleId', models.CharField(blank=True, max_length=80, null=True)),
                ('is_dark_mode', models.BooleanField(default=True)),
                ('is_hide_photos', models.BooleanField(default=False)),
                ('is_hide_trips', models.BooleanField(default=False)),
                ('is_hide_coffees', models.BooleanField(default=False)),
                ('is_hide_cities', models.BooleanField(default=False)),
                ('is_hide_countries', models.BooleanField(default=False)),
                ('is_hide_continents', models.BooleanField(default=False)),
                ('is_auto_location_report', models.BooleanField(default=True)),
                ('send_instagram', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('send_phone', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('send_email', models.EmailField(blank=True, default='', max_length=200, null=True)),
                ('send_kakao', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('send_facebook', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('send_snapchat', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('send_line', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('send_wechat', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('send_kik', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('send_vk', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('send_whatsapp', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('send_twitter', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('send_youtube', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('send_telegram', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('send_behance', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('send_linkedin', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('send_pinterest', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('send_vine', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('send_tumblr', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('blocked_user', models.ManyToManyField(blank=True, related_name='_user_blocked_user_+', to=settings.AUTH_USER_MODEL)),
                ('current_city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='currentCity', to='locations.City')),
                ('current_continent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='currentContinent', to='locations.Continent')),
                ('current_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='currentCountry', to='locations.Country')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('nationality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nationality', to='locations.Country')),
                ('residence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='residence', to='locations.Country')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Avatar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_main', models.BooleanField(default=False)),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('image', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to=users.models.upload_image)),
                ('thumbnail', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to=users.models.upload_thumbnail)),
                ('app_thumbnail', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to=users.models.upload_app_thumbnail)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='avatar', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('avatar', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='users.Avatar')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='avatar_likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
